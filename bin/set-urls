#!/bin/bash

source .env

old_base_url_query="SELECT value FROM core_config_data WHERE path = 'web/unsecure/base_url' LIMIT 1"
old_base_url_value=$(bin/mysql -h "$MARIADB_HOST" -u "$MARIADB_ROOT_USER" -p"$MARIADB_ROOT_PASSWORD" -D "$MARIADB_DATABASE" -se "$old_base_url_query")

new_base_url_value="jr.lock"

if [[ $old_base_url_value == https://* ]]; then
  old_base_url_value_extract="${old_base_url_value#https://}"
elif [[ $old_base_url_value == http://* ]]; then
  old_base_url_value_extract="${old_base_url_value#http://}"
else
  old_base_url_value_extract="$old_base_url_value"
fi

old_base_url_value_extract="${old_base_url_value_extract%/*}"

matching_columns_query="SELECT config_id, path, value FROM core_config_data WHERE value LIKE '%$old_base_url_value_extract%';"
matching_columns=$(
  bin/mysql -h "$MARIADB_HOST" -u "$MARIADB_ROOT_USER" -p"$MARIADB_ROOT_PASSWORD" -D "$MARIADB_DATABASE" -se "$matching_columns_query"
)

declare -a updates=()

while IFS= read -r line; do
  config_id=$(echo "$line" | awk '{print $1}')
  path=$(echo "$line" | awk '{print $2}')
  value=$(echo "$line" | awk '{$1=$2=""; print $0}')
  new_value="${value//$old_base_url_value_extract/$new_base_url_value}"
  new_value="${new_value#"${new_value%%[![:space:]]*}"}"

  updates+=("$config_id" "$value" "$new_value")
done <<< "$matching_columns"

for ((i = 0; i < ${#updates[@]}; i += 3)); do
  config_id="${updates[i]}"
  old_value="${updates[i + 1]}"
  new_value="${updates[i + 2]}"

  echo "Updating config_id: $config_id from '$old_value' to '$new_value'"

  update_query="UPDATE core_config_data SET value = '$new_value' WHERE config_id = $config_id;"
  bin/mysql -h "$MARIADB_HOST" -u "$MARIADB_ROOT_USER" -p"$MARIADB_ROOT_PASSWORD" -D "$MARIADB_DATABASE" -e "$update_query"
done